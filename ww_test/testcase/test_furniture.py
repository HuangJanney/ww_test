import sys, os
import re
import ast

from BeautifulReport import BeautifulReport

cur_path = os.getcwd()
sys.path.append(cur_path[:cur_path.find('ww_test') + len('ww_test')])
import unittest
from page.main_page import MainPage
import time
from utils.file_util import FileUtil
from utils.config_util import ConfigUtil
from utils.image_util import ImageUtil
from ddt import ddt,data,unpack
from utils.log_util import logger

@ddt
class TestSmoking(unittest.TestCase):
    page = MainPage()

    


    # @classmethod
    # def setUpClass(cls):
        # # cls.page.start_test()
        # cls.page.start_game_now()
        # cls.page.poco_gm('operate_reinforce')

    @data(
        #     '90101001','90102001','90103001','90103002','90104001','90104002','90107001','90107002','90107003','90107004','90107005','90108001','90108002',
        #   '90108003','90108004','90108005','90108006','90108007','90108008','90108009',
        #     '90108010',
        #   '90108011','90108012','90108013','90108014','90108015',
        #   '90108016','90108017','90108018','90108019','90108020','90108021','90108022',
        #   '90108023',
        #   '90108024','90108025','90108026','90108027','90108028',
        #   '90108029','90108030',
        #   '90108031','90108032','90108033','90108034','90108035','90108036','90108037','90108038','90108039','90108040','90108041',
        #   '90108042','90108043','90108044','90108045','90108046','90108047','90108048','90108049','90108050','90108051','90108052','90108053','90108054',
        #   '90108055','90108056','90108057',
        #   '90108058','90108059','90108060','90108062','90108063','90108064','90108065','90108066','90108067','90108068',
        #   '90109001','90109002','90109003','90112001','90112002','90112003','90112004','90112005','90112006','90112007','90112008','90112009','90112010',
        #   '90112011','90112012','90112013','90112014','90112015','90112016','90113001','90113002','90113003','90113004','90113005','90113006','90113007',
        #   '90113008','90113009','90113010','90113011','90113012',
        #   '90113013','90113014','90113015','90113016','90113017','90113018','90113019','90113020',
        #   '90113021','90113022','90113023','90113024',
        #   '90113025','90113026','90113027','90113028','90113029','90113030','90113031','90113032','90113033',
        #   '90113034','90113035','90114001','90114002','90114003','90114004',
        #   '90114005','90114006','90114007','90114008','90114009','90114010','90114011',
        #   '90114012','90114013','90114014','90114015','90114016','90114017','90114018','90114019','90114020','90114021','90114022','90114023','90114024',
        #   '90114025','90114026','90114027','90114028','90114029','90114030','90115001','90115002','90115003',
        #     # '90116001',
        #   '90117001','90118001','90199001',
        #   '90199002','90199003','90199004','90199005','90199006','90199007','90199008','90199009','90199010','90199011','90199012','90199013','90199014',
        #   '90199015','90199016','90199017','90199018','90199019','90199020','90199021','90199022','90199023','90199024','90199025','90199026','90199027',
        #   '90199028','90199029','90199030','90199031','90199032','90199033','90199034','90199035','90199036','90199037','90199038','90199039','90199040',
        #   '90199041','90199042','90199043','90199044','90199045','90199046','90199047','90199048','90199049','90199050','90199051','90199052','90199053',
        #   '90199054','90199055','90199056','90199057','90199058','90199059','90199060','90199061','90199062','90199063','90199064','90199065','90199066',
        #   '90199067','90199068','90199069','90199070','90199071','90199072','90199073','90199074','90199075','90199076','90199077','90199078','90199079',
        #   '90199080','90199081','90199082','90199083','90199084','90199085','90199086','90199087','90199088','90199089','90199090','90199091','90199092',
        #   '90199093','90199094','90199095','90199096','90199097','90199098','90199099','90199100','90199101','90199102','90199103','90199104','90199105',
        #   '90199106','90199107','90199108','90199109','90199110','90199111','90199112','90199113','90199114','90199115','90199116','90199117','90199118',
        #   '90199119','90199120','90199124','100900107','90201001','90201002','90201003','90201004','90202001','90202002','90202003','90202004','90202005',
        #   '90202006','90202007','90202008','90202009','90202010','90202011','90202012','90202014','90202015','90202016','90202017','90202018','90202019',
        #   '90203001','90203002','90203003','90203004','90203005','90203006','90203007','90203008','90203009','90203010','90203011','90203012','90203013',
        #   '90203014','90203015','90203016','90204001','90204002','90204003','90204004','90204005','90204006','90204007','90204008','90204009','90204010',
        #   '90204011','90204012','90204013','90204015','90204016','90204017','90204018','90204019','90204020','90204021','90204022','90204023','90204024',
        #   '90204025','90215001','90299001','90299002','90299003','90299004','90299005','90299006','90299007','90299008','90299009','90299010','90299011',
        #   '90299012','90299013','90299014','90299015','90299016','90299017','90299018','90299019','90299020','90299021','90299022','90299023','90299024',
        #   '90299025','90299026','90299027','90299028','90299029','90299030','90299031','90299032','90299033','90299034','90299035','90299036','90299037',
        #   '90299038','90299039','90299040','90299041','90299042','90299043','90301001','90301002','90301003','90301004','90301005','90301006','90301007',
        #   '90301008','90301009','90301010','90301011','90301012','90301013','90301014','90301015','90301016','90301017','90301018','90301019','90301020',
        #   '90301021','90301022','90301023','90301024','90301025','90301026','90301027','90301028','90301029','90301030','90301031','90301032','90301033',
        #   '90301034','90301035','90301036','90399001','90204014','90401001','90401002','90401003','90401004','90401005','90401006','90401007','90401008',
        #   '90501001','90501002','90501003','90501004','90501005','90501006','90501007','90501008','90601001','90601002','90601003','90601004','90601005',
        #   '90601006','90601007','90601008','90601009','90601010','90699001','90701001','90701002','90701003','90701004','90701005','90701006','90701007',
        #   '90701008','90701009','90701010','90701011','90799001','90799002','90799003','90799004','90799005','90799006','90799007','90799008','90799009',
        #   '90799010','90799011','90799012','90799013','90799014','90799015','90799016','90799017','90799018','90799019','90799020','90799021','90799022',
        #   '90799023','90799024','90799025','90799026','90799027','90799028','90799029','90801002','99901001','99901002','99901003',
          '99901004','99901005',
          '99901006','99901007','99901008','99901009','99901010','99901011','99901012','99901013','99901014','99901015','99901016','99901017','99901018',
          '90801001','90301037','90301038','90301039','90301040','90203017','90203018','90202020','90202021','90113036','90114031','90108061','90199121',
          '90199122','90199123','100900220','100900056','100900057','100900058','100900059','100900060','100900061','100900062','90401013','90204026',
          '90204027','90113037','90108069','90108070','90204028','90113038','90103003','90199125','90301041','90114032','90301042','90301043','90113039',
          '90109004','90601011','90401014','90401015','90501020','90114033','90112017','90108071','90301044','90301045','90113040','90204029','90204030',
          '90113041','90301046','90204031','90203019','90202022','90113042','90401016','90113043','90203020','90301047','90113044','90113045','90301048',
          '90301049','90301050','90113046','90401021','90113055','90113056','90204035','90203023','90203024','90203025','90203026','90203027','90203028',
          '90112021','90113057','90601015','90301062','90501026','90113066','90202023','90202024','90202025','90113047','90301051','90301052','90202026',
          '90202027','90113048','90113049','90301053','90301054','90113050','90113051','90113052','90601012','90601013','90501021','90301055','90401017',
          '90301056','90202028','90501022','90113053','90301059','90108072','90301057','90301058','90113054','90112018','90202029','90115004','90115005',
          '90115006','90115007','90115008','90109005','90114034','90108073','90102002','90108085','90103004','90501023','90401018','90202030','90108074',
          '90301061','90109006','90103005','90601014','90114035','90108075','90202031','90501024','90401019','90108076','90108077','90108078','90114036',
          '90109007','90301060','90112019','90204032','90501025','90401020','90701012','90701017','90701014','90701015','90701016','90199126','90199127',
          '90199128','90199129','90199130','90199131','90199132','90199133','90199134','90199135','90112020','90114037','90108079','90108080','90204033',
          '90204034','90113058','90113059','90204036','90204037','90204038','90204039','90204040','90204041','90204042','90108081','90108082','90113060',
          '90113061','90113062','90113063','90113064','90601016','90108083','90114038','90204043','90203029','90108084','90113065')
    def test_01(self,itemid):
            self.page.move((71.58,32.13))
            self.page.clean_backpack()
            self.page.add_backpack(itemid)
            self.page.open_backpack()
            goods_icon = self.page.get_value_by_id(itemid,'图标')
            self.page.poco_click(goods_icon)
            self.page.back()
            self.page.sleep()
            self.page.place()
            self.page.sleep(2.0)#避免网络波动影响，此处设置2s等待
            place_file = f'{itemid}_place.png'
            self.page.snapshot_img(place_file,'test_furbiture','place')
            #此处进行放置后的截图
            in_use_file = f'{itemid}_inuse.png'
            if self.page.poco_exists('ui://pkg_mainwindow/image/house_icon_fabricate'):
                self.page.poco_click('ui://pkg_mainwindow/image/house_icon_fabricate')
                self.page.sleep(1.0)
                self.page.snapshot_img(in_use_file,'test_furbiture','in_use')
                self.page.back()
                self.page.snapshot_img(in_use_file,'test_furbiture','stop_use')
                
            elif self.page.poco_exists('ui://pkg_mainwindow/image/house_icon_tap'):
                seat_list = self.page.poco('ui://pkg_mainwindow/image/house_icon_tap')
                not_last_iteration = True
                for index,seat in enumerate(seat_list):
                    seat.click()
                    sat_file = f'{itemid}_inuse_{index}.png'
                    # self.page.poco_click('ui://pkg_mainwindow/image/house_icon_tap')
                    self.page.sleep(1.0)
                    self.page.snapshot_img(sat_file,'test_furbiture','in_use')
                    for direction in ["W","A","S","D"]:
                        self.page.move_stick(direction)
                    self.page.snapshot_img(sat_file,'test_furbiture','stop_use')
                    try:
                        _ = next(iter(seat_list[index+1:]))
                        logger.info('不是最后一个挂点')
                    except:
                        not_last_iteration = False
                        logger.info(f'{index}最后一个挂点')
                    current_position = self.page.get_current_position()
                    if current_position[0] == 0 :
                        logger.info(f'{itemid}挂点{index}异常')
                        self.page.poco_click('ui://2ni11kbwulg78yjc')
                        self.page.move((55.76,31.68))
                        if not_last_iteration:
                            self.page.move((71.58,32.13))
               
                
            elif self.page.poco_exists('ui://pkg_mainwindow/image/house_icon_dressing'):
                self.page.poco_click('ui://pkg_mainwindow/image/house_icon_dressing')
                self.page.sleep(1.0)
                self.page.snapshot_img(in_use_file,'test_furbiture','in_use')
                self.page.back()
                self.page.snapshot_img(in_use_file,'test_furbiture','stop_use')
                
            elif self.page.poco_exists('ui://pkg_mainwindow/image/house_icon_cooking'):
                self.page.poco_click('ui://pkg_mainwindow/image/house_icon_cooking')
                self.page.sleep(1.0)
                self.page.snapshot_img(in_use_file,'test_furbiture','in_use')
                self.page.back()
                self.page.snapshot_img(in_use_file,'test_furbiture','stop_use')
            else:
                self.page.snapshot_img(in_use_file,'test_furbiture','fail')
            self.page.poco_gm('clean_all_jiaju')
            logger.info('家具已清除')
        # except:
        #     erro_file_name = '%s_error.png'%itemid
        #     self.page.snapshot_img(erro_file_name,'test_furniture','error')
        #     self.page.stop_game_now()
        #     self.page.start_game_now()
        #     self.page.poco_gm('clean_all_jiaju')
        #     self.page.poco_gm('operate_reinforce')






if __name__ == '__main__':
    unittest.main()
    # now = time.strftime("%Y-%m-%d %H%M%S", time.localtime(time.time()))
    # ts = unittest.TestSuite()  # 实例化
    # # 按类加载全部testxxx测试用例
    # for i in range(1):        
    #     ts.addTest(unittest.makeSuite(TestSmoking))
    # # 按函数加载testxxx测试用例
    # # ts.addTest(HtmlReport('test_1'))
    # report_name = '家具测试'
    # filename = report_name + now + '.html'
    # # 加载执行用例生成报告
    # result = BeautifulReport(ts)
    # 定义报告属性
    # result.report(description='对比测试1', filename=filename, report_dir=FileUtil.get_report_path())
    # print(FileUtil.get_report_path())